{"ast":null,"code":"var _jsxFileName = \"/Users/antonrybalkin/Projects/testtask/src/components/ComponentRadioGroup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ComponentRadioBTN from './ComponentRadioBTN';\nimport ComponentPreloader from \"./ComponentPreloader\";\n/**\n * Component what render group with radio btn and same name\n * @param {*} props \n * @returns \n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ComponentRadioGroup = props => {\n  _s();\n\n  /**\n   * const positions - store data from server\n   */\n  const [positions, setPositions] = useState([]);\n  /**\n   * Hook what get content for radio btn and store it\n   */\n\n  useEffect(() => {\n    if (positions.length == 0) {\n      fetch(\"https://frontend-test-assignment-api.abz.agency/api/v1/positions\").then(response => {\n        return response.json();\n      }).then(data => {\n        if (data.success) {\n          setPositions(data.positions);\n        }\n      });\n    }\n  });\n\n  if (positions.length > 0) {\n    return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      id: props.id,\n      className: \"registration_fieldset\",\n      children: [positions.map(el => {\n        return /*#__PURE__*/_jsxDEV(ComponentRadioBTN, {\n          reqired: true,\n          text: el.name,\n          name: props.name,\n          value: el.id\n        }, el.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"input_error hide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(ComponentPreloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this);\n  }\n};\n\n_s(ComponentRadioGroup, \"VDMy9eUnuS4LQuPd3KaWXngeOgg=\");\n\n_c = ComponentRadioGroup;\nexport default ComponentRadioGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComponentRadioGroup\");","map":{"version":3,"names":["React","useEffect","useState","ComponentRadioBTN","ComponentPreloader","ComponentRadioGroup","props","positions","setPositions","length","fetch","then","response","json","data","success","id","map","el","name"],"sources":["/Users/antonrybalkin/Projects/testtask/src/components/ComponentRadioGroup.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport ComponentRadioBTN from './ComponentRadioBTN';\nimport ComponentPreloader from \"./ComponentPreloader\";\n/**\n * Component what render group with radio btn and same name\n * @param {*} props \n * @returns \n */\nconst ComponentRadioGroup = (props) => {\n    /**\n     * const positions - store data from server\n     */\n    const [positions,\n        setPositions] = useState([]);\n\n    /**\n     * Hook what get content for radio btn and store it\n     */\n    useEffect(() => {\n        if(positions.length==0)\n        {\n            fetch(\"https://frontend-test-assignment-api.abz.agency/api/v1/positions\").then(response => {\n            return response.json()\n        }).then(data => {\n            if (data.success) {\n                setPositions(data.positions)\n            }\n        })\n        }\n    })\n    if(positions.length>0)\n    {\n        return (\n            <fieldset id={props.id} className={\"registration_fieldset\"}>\n                {positions.map(el=>{\n                    return <ComponentRadioBTN key={el.id} reqired={true} text={el.name} name={props.name} value={el.id}></ComponentRadioBTN>\n                })}\n                <span className={\"input_error hide\"}></span>\n            </fieldset>\n        );\n       \n    }\n    else\n    {\n        return <ComponentPreloader></ComponentPreloader>\n    }\n}\n\nexport default ComponentRadioGroup;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;EAAA;;EACnC;AACJ;AACA;EACI,MAAM,CAACC,SAAD,EACFC,YADE,IACcN,QAAQ,CAAC,EAAD,CAD5B;EAGA;AACJ;AACA;;EACID,SAAS,CAAC,MAAM;IACZ,IAAGM,SAAS,CAACE,MAAV,IAAkB,CAArB,EACA;MACIC,KAAK,CAAC,kEAAD,CAAL,CAA0EC,IAA1E,CAA+EC,QAAQ,IAAI;QAC3F,OAAOA,QAAQ,CAACC,IAAT,EAAP;MACH,CAFG,EAEDF,IAFC,CAEIG,IAAI,IAAI;QACZ,IAAIA,IAAI,CAACC,OAAT,EAAkB;UACdP,YAAY,CAACM,IAAI,CAACP,SAAN,CAAZ;QACH;MACJ,CANG;IAOH;EACJ,CAXQ,CAAT;;EAYA,IAAGA,SAAS,CAACE,MAAV,GAAiB,CAApB,EACA;IACI,oBACI;MAAU,EAAE,EAAEH,KAAK,CAACU,EAApB;MAAwB,SAAS,EAAE,uBAAnC;MAAA,WACKT,SAAS,CAACU,GAAV,CAAcC,EAAE,IAAE;QACf,oBAAO,QAAC,iBAAD;UAA+B,OAAO,EAAE,IAAxC;UAA8C,IAAI,EAAEA,EAAE,CAACC,IAAvD;UAA6D,IAAI,EAAEb,KAAK,CAACa,IAAzE;UAA+E,KAAK,EAAED,EAAE,CAACF;QAAzF,GAAwBE,EAAE,CAACF,EAA3B;UAAA;UAAA;UAAA;QAAA,QAAP;MACH,CAFA,CADL,eAII;QAAM,SAAS,EAAE;MAAjB;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EASH,CAXD,MAaA;IACI,oBAAO,QAAC,kBAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;AACJ,CAtCD;;GAAMX,mB;;KAAAA,mB;AAwCN,eAAeA,mBAAf"},"metadata":{},"sourceType":"module"}